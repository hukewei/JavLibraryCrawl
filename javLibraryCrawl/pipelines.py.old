# -*- coding: utf-8 -*-

# Define your item pipelines here
#
# Don't forget to add your pipeline to the ITEM_PIPELINES setting
# See: http://doc.scrapy.org/en/latest/topics/item-pipeline.html
import pymongo

from scrapy.contrib.pipeline.images import ImagesPipeline
from scrapy.exceptions import DropItem
from scrapy.http import Request
from scrapy.conf import settings
from scrapy import log



class JavlibrarycrawlPipeline(ImagesPipeline):
    def process_item(self, item, spider):
        return item

    def get_media_requests(self, item, info):
    	for image_url in item['image_urls']:
    		yield Request(image_url)



class MongoDBPipeline(object):
    def process_item(self, item, spider):
        connection = pymongo.MongoClient(
            settings['MONGODB_SERVER'],
            settings['MONGODB_PORT']
        )
        db = connection[settings['MONGODB_DB']]
        if spider.name == 'actor_spider':
            self.collection = db[settings['MONGODB_COLLECTION']]
        elif spider.name == 'best_rated_spider':
            self.collection = db[settings['MONGODB_COLLECTION_BEST_RATED']]
        elif spider.name == 'most_wanted_spider':
            self.collection = db[settings['MONGODB_COLLECTION_MOST_WANTED']]
        elif spider.name == 'new_releases_spider':
            self.collection = db[settings['MONGODB_COLLECTION_NEW_RELEASES']]
        elif spider.name == 'new_entries_spider':
            self.collection = db[settings['MONGODB_COLLECTION_NEW_ENTRIES']]
        else:
            self.collection = db[settings['MONGODB_COLLECTION']]
        valid = True
        for data in item:
            if not data:
                valid = False
                raise DropItem("Missing {0}!".format(data))
        if valid:
            self.collection.insert(dict(item))
            log.msg("Question added to MongoDB database!",
                    level=log.DEBUG, spider=spider)
        return item
